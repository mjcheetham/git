git-survey(1)
=============

NAME
----
git-survey - EXPERIMENTAL: Measure various repository dimensions of scale

SYNOPSIS
--------
[verse]
(EXPERIMENTAL!) `git survey` <options>

DESCRIPTION
-----------

Survey the repository and measure various dimensions of scale.

As repositories grow to "monorepo" size, certain data shapes can cause
performance problems.  `git-survey` attempts to measure and report on
known problem areas.

Ref Selection and Reachable Objects
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this first analysis phase, `git survey` will iterate over the set of
requested branches, tags, and other refs and treewalk over all of the
reachable commits, trees, and blobs and generate various statistics.

OPTIONS
-------

--progress::
	Show progress.  This is automatically enabled when interactive.

--json::
	Print results in JSON rather than in a human-friendly format.

Ref Selection
~~~~~~~~~~~~~

The following options control the set of refs that `git survey` will examine.
By default, `git survey` will look at tags, local branches, and remote refs.
If any of the following options are given, the default set is cleared and
only refs for the given options are added.

--all-refs::
	Use all refs.  This includes local branches, tags, remote refs,
	notes, and stashes.  This option overrides all of the following.

--branches::
	Add local branches (`refs/heads/`) to the set.

--tags::
	Add tags (`refs/tags/`) to the set.

--remotes::
	Add remote branches (`refs/remote/`) to the set.

--detached::
	Add HEAD to the set.

--other::
	Add notes (`refs/notes/`) and stashes (`refs/stash/`) to the set.

Large Item Selection
~~~~~~~~~~~~~~~~~~~~

The following options control the optional display of large items under
various dimensions of scale.  The OID of the largest `n` objects will be
displayed in reverse sorted order.  For each, `n` defaults to 10.

--commit-parents::
	Shows the OIDs of the commits with the most parent commits.

--commit-sizes::
	Shows the OIDs of the largest commits by size in bytes.  This is
	usually the ones with the largest commit messages.

--tree-entries::
	Shows the OIDs of the trees with the most number of entries.  These
	are the directories with the most number of files or subdirectories.

--tree-sizes::
	Shows the OIDs of the largest trees by size in bytes.  This set
	will usually be the same as the vector of number of entries unless
	skewed by very long entry names.

--blob-sizes::
	Shows the OIDs of the largest blobs by size in bytes.

OUTPUT
------

By default, `git survey` will print information about the repository in a
human-readable format that includes overviews and tables.

CONFIGURATION
-------------

include::config/survey.txt[]

GIT
---
Part of the linkgit:git[1] suite
